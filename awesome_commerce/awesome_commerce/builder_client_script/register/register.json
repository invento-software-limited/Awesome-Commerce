{
  "docstatus": 0,
  "doctype": "Builder Client Script",
  "modified": "2025-04-20 07:32:25.335792",
  "name": "register",
  "public_url": "/files/page_scripts/JavaScript-c7d47-9dbf95331c.js?v=18bf6c25af",
  "script": "window.onload = function () {\n  if (page_data.user && page_data.user !== \"Guest\") {\n    const urlParams = new URLSearchParams(window.location.search);\n    const redirectTo = urlParams.get('redirect-to');\n\n    window.location.href = redirectTo || '/profile';\n  }\n   const showPasswordCheckbox = document.getElementById(\"show_password\");\n  const passwordInput = document.getElementById(\"password\");\n  const confirmPasswordInput = document.getElementById(\"confirm_password\");\n\n  if (showPasswordCheckbox && passwordInput && confirmPasswordInput) {\n    showPasswordCheckbox.setAttribute('type', 'checkbox');\n\n    showPasswordCheckbox.addEventListener(\"change\", function () {\n      if (this.checked) {\n        passwordInput.setAttribute('type', 'text');\n        confirmPasswordInput.setAttribute('type', 'text');\n      } else {\n        passwordInput.setAttribute('type', 'password');\n        confirmPasswordInput.setAttribute('type', 'password');\n      }\n    });\n  }\n};\n\ndocument.getElementById('register_form').addEventListener('submit', async function(e) {\n  e.preventDefault(); // Prevent default form submission\n\n  const form = e.target;\n  const formData = new FormData(form);\n  const csrfToken = page_data.csrf_token;\n\n  const password = formData.get('password');\n  const confirmPassword = formData.get('confirm_password');\n\n  // Check if passwords match\n  if (password !== confirmPassword) {\n    Toastify({\n      text: \"‚ùå Passwords do not match.\",\n      close: true,\n      gravity: \"top\",\n      position: \"center\",\n      stopOnFocus: true,\n      style: {\n        background: \"linear-gradient(to right, #ff5f6d, #ffc371)\",\n      }\n    }).showToast();\n    return;\n  }\n\n  // Convert form data to JSON\n  const data = {};\n  formData.forEach((value, key) => {\n    data[key] = value;\n  });\n\n  try {\n    const response = await fetch('/api/method/hopkins.api.register.register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-frappe-csrf-token': csrfToken,\n      },\n      body: JSON.stringify({ doc: data })\n    });\n\n    const result = await response.json();\n\n    if (response.ok && result.message) {\n      Toastify({\n        text: 'üéâ Registration successful!',\n        close: true,\n        gravity: \"top\",\n        position: \"center\",\n        stopOnFocus: true,\n        style: {\n          background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n        }\n      }).showToast();\n      window.location.href = '/profile'\n    } else {\n         if (result._server_messages) {\n              const messages = JSON.parse(result._server_messages);\n              const firstMessage = JSON.parse(messages[0]);\n              const cleanMessage = firstMessage.message.replace(/<[^>]*>/g, ''); \n              errorMessage = `‚ùå ${cleanMessage}`;\n         \n              Toastify({\n                text: errorMessage,\n                close: true,\n                gravity: \"top\",\n                position: \"center\",\n                stopOnFocus: true,\n                style: {\n                  background: \"linear-gradient(to right, #ff5f6d, #ffc371)\",\n                }\n              }).showToast();\n         }\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    Toastify({\n      text: '‚ö†Ô∏è An error occurred. Please try again.',\n      close: true,\n      gravity: \"top\",\n      position: \"center\",\n      stopOnFocus: true,\n      style: {\n        background: \"linear-gradient(to right, #f857a6, #ff5858)\",\n      }\n    }).showToast();\n  }\n});\n",
  "script_type": "JavaScript"
}
